TIPOS GENÉRICOS EM JAVA
1. O uso dos tipos genéricos nos permite programar um código com
uma camada de abstração na parte de tipagem, na medida que permite
criá-los de maneira extensível e sem castings excessivos, dada a
natureza de algumas estrutura de dados. Como declaramos o tipo esperado
nas estruturas, temos noção de corretude e maior controle sobre a tipagem
em tempo de compilação, além de melhorar a leitura e robustez.

5. Teremos um método que não retorna nada e que aceita como parâmetro
coleções de java que armazenam objetos do tipo passado como "formal type
parameters" quando a classe a que ele pertence foi instanciada.

6. Teremos um método que não retorna nada mas que aceita como parâmetros
 coleções de java que o supertipo de todas as coleções, representado
   por um <?> (wildcard)

 7. Nosso método aceita que o parâmetro passado seja de qualquer tipo
 desde que seja um subtipo do tipo passado na instanciação do objeto.
 É um exemplo do que chamamos de "bounded wildcards"

 8. Nosso método aceita que o parâmetro passado de qualquer tipo
 desde que ele seja um supertipo do tipo passado na instanciação.

